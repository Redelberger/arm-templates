{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "billingAccount": {
            "type": "string"
        },
        "subscriptionName": {
            "type": "string"
        },
        "subscriptionOwnerId": {
            "type": "string"
        },
        "managementGroupId": {
            "type": "string"
        },
        "budgetName": {
            "type": "string",
            "defaultValue": "MyBudget",
            "metadata": {
                "description": "Name of the Budget. It should be unique within a resource group."
            }
        },
        "amount": {
            "type": "int",
            "defaultValue": 1000,
            "metadata": {
                "description": "The total amount of cost or usage to track with the budget"
            }
        },
        "timeGrain": {
            "type": "string",
            "defaultValue": "Monthly",
            "allowedValues": [
                "Monthly",
                "Quarterly",
                "Annually"
            ],
            "metadata": {
                "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
            }
        },
        "startDate": {
            "type": "string",
            "metadata": {
                "description": "The start date must be first of the month in YYYY-MM-DD format. Future start date should not be more than three months. Past start date should be selected within the timegrain preiod."
            }
        },
        "endDate": {
            "type": "string",
            "metadata": {
                "description": "The end date for the budget in YYYY-MM-DD format. If not provided, we default this to 10 years from the start date."
            }
        },
        "firstThreshold": {
            "type": "int",
            "defaultValue": 90,
            "metadata": {
                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
            }
        },
        "secondThreshold": {
            "type": "int",
            "defaultValue": 110,
            "metadata": {
                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
            }
        },
        "contactRoles": {
            "type": "array",
            "defaultValue": [
                "Owner",
                "Contributor",
                "Reader"
            ],
            "metadata": {
                "description": "The list of contact roles to send the budget notification to when the threshold is exceeded."
            }
        },
        "contactEmails": {
            "type": "array",
            "metadata": {
                "description": "The list of email addresses to send the budget notification to when the threshold is exceeded."
            }
        }
    },
    "variables": {
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
    },
    "resources": [
        {   "type": "Microsoft.Subscription/aliases",
            "apiVersion": "2020-09-01",
            "scope": "/",
            "name": "[parameters('subscriptionName')]",
            "properties": {
                "workLoad": "Production",
                "displayName": "[parameters('subscriptionName')]",
                "billingScope": "[parameters('billingAccount')]",
                "managementGroupId": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('managementGroupId'))]",
                "subscriptionOwnerId": "[parameters('subscriptionOwnerId')]",
                "tags": "[concat('Ansprechpartner:', parameters('subscriptionOwnerId'))]"
            }
        },
        {   "type": "Microsoft.Consumption/budgets",
            "apiVersion": "2021-10-01",
            "name": "[parameters('budgetName')]",
            "scope": "[concat('Microsoft.Subscription/aliases', '/', parameters('subscriptionName'))]",
            "dependsOn": [
                "[parameters('subscriptionName')]"
            ],
            "properties": {
                "timePeriod": {
                    "startDate": "[parameters('startDate')]",
                    "endDate": "[parameters('endDate')]"
                },
                "timeGrain": "[parameters('timeGrain')]",
                "amount": "[parameters('amount')]",
                "category": "Cost",
                "notifications": {
                    "NotificationForExceededBudget1": {
                    "enabled": true,
                    "operator": "GreaterThan",
                    "threshold": "[parameters('firstThreshold')]",
                    "contactEmails": "[parameters('contactEmails')]",
                    "contactRoles": "[parameters('contactRoles')]"
                    },
                    "NotificationForExceededBudget2": {
                    "enabled": true,
                    "operator": "GreaterThan",
                    "threshold": "[parameters('secondThreshold')]",
                    "contactEmails": "[parameters('contactEmails')]",
                    "contactRoles": "[parameters('contactRoles')]",
                    "thresholdType": "Forecasted"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
