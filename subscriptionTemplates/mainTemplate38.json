{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "eaEnrollmentAccount": {
            "type": "string"
        },
        "Workload": {
            "type": "string",
            "defaultValue": "Production",
            "allowedValues": [
                "Production",
                "DevTest"
            ]
        },
        "subscriptionName": {
            "type": "string"
        },
        "subscriptionOwnerGroupId": {
            "type": "string"
        },
        "subscriptionOwnerId": {
            "type": "string"
        },
        "managementGroupId": {
            "type": "string"
        },
        "budgetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Budget. It should be unique within a resource group."
            }
        },
        "amount": {
            "type": "int",
            "defaultValue": 1000,
            "metadata": {
                "description": "The total amount of cost or usage to track with the budget"
            }
        },
        "timeGrain": {
            "type": "string",
            "defaultValue": "Monthly",
            "allowedValues": [
                "Monthly",
                "Quarterly",
                "Annually"
            ],
            "metadata": {
                "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
            }
        },
        "startDate": {
            "type": "string",
            "metadata": {
                "description": "The start date must be first of the month in YYYY-MM-DD format. Future start date should not be more than three months. Past start date should be selected within the timegrain preiod."
            }
        },
        "endDate": {
            "type": "string",
            "metadata": {
                "description": "The end date for the budget in YYYY-MM-DD format. If not provided, we default this to 10 years from the start date."
            }
        },
        "firstThreshold": {
            "type": "int",
            "defaultValue": 90,
            "metadata": {
                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
            }
        },
        "secondThreshold": {
            "type": "int",
            "defaultValue": 110,
            "metadata": {
                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
            }
        },
        "contactRoles": {
            "type": "array",
            "defaultValue": [
                "Owner",
                "Contributor",
                "Reader"
            ],
            "metadata": {
                "description": "The list of contact roles to send the budget notification to when the threshold is exceeded."
            }
        },
        "contactEmails": {
            "type": "array",
            "metadata": {
                "description": "The list of email addresses to send the budget notification to when the threshold is exceeded."
            }
        },
        "defaultNetworkRG": {
            "type": "string",
            "defaultValue": "rg-network",
            "metadata": {
                "description": "Change, if required the name of the default Network Resource Group"
            }
        },
        "defaultNsgName": {
            "type": "string",
            "defaultValue": "[concat('nsg-',parameters('subscriptionName'))]",
            "metadata": {
            "displayName": "Change, if required the name of the default Network Security Group (NSG)"
            }
        },
        "defaultVnetName": {
            "type": "string",
            "defaultValue": "[concat('vnet-', parameters('subscriptionName'))]",
            "metadata": {
                "description": "Change, if required the name of the default Vnet Name"
            }
        },
        "defaultSubnetName": {
            "type": "string",
            "defaultValue": "[concat('snet-', parameters('subscriptionName'))]",
            "metadata": {
                "description": "Change, if required the name of the default Subnet Name"
            }
        },
        "defaultRoutingTableName": {
            "type": "string",
            "defaultValue": "[concat('rt-',parameters('subscriptionName'))]",
            "metadata": {
            "description": "Change, if required the name of the default Routing Table Name"
            }
        },
        "addressSpaceVnet": {
            "type": "string",
            "defaultValue": "192.168.20.16/28"
        },
        "addressSpaceSubnet": {
            "type": "string",
            "defaultValue": "192.168.20.16/28"
        },
        "nextHopIpAddress": {
            "type": "string",
            "defaultValue": "172.28.63.164"
        },
        "CreateHubPeering": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected, you will also create the HubPeering, but need corresponding permissions in the hub network resource group!"
            }
        },
        "CreateVM": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected a corresponding VM is created and joined to the on-prem AD"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "Size of VM"
            },
            "allowedValues": [
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms"
            ]
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter",
                "2019-Datacenter",
                "2022-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2012-R2-Datacenter, 2016-Datacenter, 2019-Datacenter, 2022-Datacenter."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "vm-test-01-d",
            "maxLength": 15,
            "minLength": 1,
            "metadata": {
                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
            }
        },
        "domainToJoin": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "NetBIOSdomainToJoin": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The NetBIOS Name of the AD domain"
            }
        },
        "domainUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Username with domain-join privileges"
            }
        },
        "domainPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Password of the account with domain-join privileges"
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Organizational Unit path in which the object will be created."
            }
        },
        "domainJoinOptions": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "localAdmin",
            "metadata": {
                "description": "The name of the local administrator of the new VM."
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "The password for the local administrator account of the new VM."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[uniqueString(parameters('managementGroupId'), parameters('subscriptionName'))]",
            "metadata": {
                "description": "The name of the storage account."
            }
        }
    },
    "variables": {
    },
    "resources": [
        {   "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[format('Create-{0}', parameters('subscriptionName'))]",
            "location": "[deployment().location]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "eaEnrollmentAccount": {
                        "value": "[parameters('eaEnrollmentAccount')]"
                    },
                    "Workload": {
                        "value": "[parameters('Workload')]"
                    },
                    "subscriptionName": {
                        "value": "[parameters('subscriptionName')]"
                    },
                    "subscriptionOwnerId": {
                        "value": "[parameters('subscriptionOwnerId')]"
                    },
                    "managementGroupId": {
                        "value": "[parameters('managementGroupId')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "eaEnrollmentAccount": {
                            "type": "string",
                            "metadata": {
                                "description": "EnrollmentAccount used for subscription billing"
                            }
                        },
                        "Workload": {
                            "type": "string",
                            "metadata": {
                                "description": "The workload type of the subscription. It can be either Production or DevTest."
                            }
                        },
                        "subscriptionName": {
                            "type": "string",
                            "metadata": {
                                "description": "Subscription Name to assign to the subscription"
                            }
                        },
                        "subscriptionOwnerId": {
                            "type": "string",
                            "metadata": {
                                "description": "subscriptionOwnerId for the subscription"
                            }
                        },
                        "managementGroupId": {
                            "type": "string",
                            "metadata": {
                                "description": "managementGroupId to place subscription into"
                            }
                        },
                        "subscriptionTags": {
                            "type": "object",
                            "defaultValue": {
                                "Ansprechpartner": "parameters('subscriptionOwnerId')"
                            }
                        }
                    },
                    "resources": [
                        {   "type": "Microsoft.Subscription/aliases",
                            "apiVersion": "2020-09-01",
                            "scope": "/",
                            "name": "[parameters('subscriptionName')]",
                            "properties": {
                                "workLoad": "[parameters('Workload')]",
                                "displayName": "[parameters('subscriptionName')]",
                                "billingScope": "[parameters('eaEnrollmentAccount')]",
                                "managementGroupId": "[parameters('managementGroupId')]",
                                "subscriptionOwnerId": "[parameters('subscriptionOwnerId')]",
                                "tags": "[parameters('subscriptionTags')]"
                            }
                        }
                    ],
                    "outputs": {
                        "subscriptionId": {
                            "type": "string",
                            "value": "[reference(tenantResourceId('Microsoft.Subscription/aliases', parameters('subscriptionName'))).subscriptionId]"
                        }
                    }
                }
            }
        },
        {   "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[format('Create-nestedResources-for-{0}', parameters('subscriptionName'))]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[format('Create-{0}', parameters('subscriptionName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "subscriptionId": {
                        "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Create-{0}', parameters('subscriptionName')))).outputs.subscriptionId.value]"
                    },
                    "budgetName": {
                        "value": "[parameters('budgetName')]"
                    },
                    "startDate": {
                        "value": "[parameters('startDate')]"
                    },
                    "endDate": {
                        "value": "[parameters('endDate')]"
                    },
                    "timeGrain": {
                        "value": "[parameters('timeGrain')]"
                    },
                    "amount": {
                        "value": "[parameters('amount')]"
                    },
                    "firstThreshold": {
                        "value": "[parameters('firstThreshold')]"
                    },
                    "secondThreshold": {
                        "value": "[parameters('secondThreshold')]"
                    },
                    "contactEmails": {
                        "value": "[parameters('contactEmails')]"
                    },
                    "contactRoles": {
                        "value": "[parameters('contactRoles')]"
                    },
                    "defaultNetworkRG": {
                        "value": "[parameters('defaultNetworkRG')]"
                    },
                    "defaultNsgName": {
                        "value": "[parameters('defaultNsgName')]"
                    },
                    "defaultVnetName": {
                        "value": "[parameters('defaultVnetName')]"
                    },
                    "defaultSubnetName": {
                        "value": "[parameters('defaultSubnetName')]"
                    },
                    "defaultRoutingTableName": {
                        "value": "[parameters('defaultRoutingTableName')]"
                    },
                    "addressSpaceVnet": {
                        "value": "[parameters('addressSpaceVnet')]"
                    },
                    "addressSpaceSubnet": {
                        "value": "[parameters('addressSpaceSubnet')]"
                    },
                    "subscriptionName": {
                        "value": "[parameters('subscriptionName')]"
                    },
                    "nextHopIpAddress": {
                        "value": "[parameters('nextHopIpAddress')]"
                    },
                    "CreateHubPeering": {
                        "value": "[parameters('CreateHubPeering')]"
                    },
                    "CreateVM": {
                        "value": "[parameters('CreateVM')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "windowsOSVersion": {
                        "value": "[parameters('windowsOSVersion')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "domainToJoin": {
                        "value": "[parameters('domainToJoin')]"
                    },
                    "NetBIOSdomainToJoin": {
                        "value": "[parameters('NetBIOSdomainToJoin')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('domainUsername')]"
                    },
                    "domainPassword": {
                        "value": "[parameters('domainPassword')]"
                    },
                    "ouPath": {
                        "value": "[parameters('ouPath')]"
                    },
                    "domainJoinOptions": {
                        "value": "[parameters('domainJoinOptions')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "subscriptionId": {
                            "type": "string",
                            "metadata": {
                                "description": "ID of the Subscrption to attach the budget to."
                            }
                        },
                        "budgetName": {
                            "type": "string",
                            "metadata": {
                                "description": "Name of the Budget. It should be unique within a resource group."
                            }
                        },
                        "startDate": {
                            "type": "string",
                            "metadata": {
                                "description": "The start date must be first of the month in YYYY-MM-DD format. Future start date should not be more than three months. Past start date should be selected within the timegrain preiod."
                            }
                        },
                        "endDate": {
                            "type": "string",
                            "metadata": {
                                "description": "The end date for the budget in YYYY-MM-DD format. If not provided, we default this to 10 years from the start date."
                            }
                        },
                        "timeGrain": {
                            "type": "string",
                            "metadata": {
                                "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
                            }
                        },
                        "amount": {
                            "type": "int",
                            "metadata": {
                                "description": "The total amount of cost or usage to track with the budget"
                            }
                        },
                        "firstThreshold": {
                            "type": "int",
                            "metadata": {
                                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
                            }
                        },
                        "secondThreshold": {
                            "type": "int",
                            "metadata": {
                                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
                            }
                        },
                        "contactEmails": {
                            "type": "array",
                            "metadata": {
                                "description": "The list of email addresses to send the budget notification to when the threshold is exceeded."
                            }
                        },
                        "contactRoles": {
                            "type": "array",
                            "metadata": {
                                "description": "The list of contact roles to send the budget notification to when the threshold is exceeded."
                            }
                        },
                        "defaultNetworkRG": {
                            "type": "string",
                            "metadata": {
                                "description": "Change, if required the name of the default Network Resource Group"
                            }
                        },
                        "defaultNsgName": {
                            "type": "string",
                            "metadata": {
                                "displayName": "Change, if required the name of the default Network Security Group (NSG)"
                            }
                        },
                        "defaultVnetName": {
                            "type": "string",
                            "metadata": {
                                "description": "Change, if required the name of the default Vnet Name"
                            }
                        },
                        "defaultSubnetName": {
                            "type": "string",
                            "metadata": {
                                "description": "Change, if required the name of the default Subnet Name"
                            }
                        },
                        "defaultRoutingTableName": {
                            "type": "string",
                            "metadata": {
                                "description": "Change, if required the name of the default Routing Table Name"
                            }
                        },
                        "addressSpaceVnet": {
                            "type": "string"
                        },
                        "addressSpaceSubnet": {
                            "type": "string"
                        },
                        "nextHopIpAddress": {
                            "type": "string"
                        },
                        "subscriptionName": {
                            "type": "string"
                        },
                        "CreateHubPeering": {
                            "type": "string",
                            "metadata": {
                                "description": "Create also Hub Peering?"
                            }
                        },
                        "CreateVM": {
                            "type": "string",
                            "metadata": {
                                "description": "Create VM?"
                            }
                        },
                        "vmSize": {
                            "type": "string",
                            "metadata": {
                                "description": "Size of VM"
                            }
                        },
                        "windowsOSVersion": {
                            "type": "string",
                            "metadata": {
                                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2012-R2-Datacenter, 2016-Datacenter, 2019-Datacenter, 2022-Datacenter."
                            }
                        },
                        "vmName": {
                            "type": "string",
                            "metadata": {
                                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
                            }
                        },
                        "domainToJoin": {
                            "type": "string",
                            "metadata": {
                                "description": "The FQDN of the AD domain"
                            }
                        },
                        "NetBIOSdomainToJoin": {
                            "type": "string",
                            "metadata": {
                                "description": "The NetBIOS Name of the AD domain"
                            }
                        },
                        "domainUsername": {
                            "type": "string",
                            "metadata": {
                                "description": "Username with domain-join privileges"
                            }
                        },
                        "domainPassword": {
                            "type": "secureString",
                            "metadata": {
                                "description": "Password of the account with domain-join privileges"
                            }
                        },
                        "ouPath": {
                            "type": "string",
                            "metadata": {
                                "description": "Organizational Unit path in which the object will be created."
                            }
                        },
                        "domainJoinOptions": {
                            "type": "int",
                            "metadata": {
                                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
                            }
                        },
                        "adminUsername": {
                            "type": "string",
                            "metadata": {
                                "description": "The name of the local administrator of the new VM."
                            }
                        },
                        "adminPassword": {
                            "type": "secureString",
                            "metadata": {
                                "description": "The password for the local administrator account of the new VM."
                            }
                        },
                        "storageAccountName": {
                            "type": "string",
                            "metadata": {
                                "description": "The name of the storage account."
                            }
                        }
                    },
                    "resources": [
                        {   "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2020-10-01",
                            "name": "[format('Create-{0}', parameters('budgetName'))]",
                            "subscriptionId": "[parameters('subscriptionId')]",
                            "location": "[deployment().location]",
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                    "budgetName": {
                                        "value": "[parameters('budgetName')]"
                                    },
                                    "startDate": {
                                        "value": "[parameters('startDate')]"
                                    },
                                    "endDate": {
                                        "value": "[parameters('endDate')]"
                                    },
                                    "timeGrain": {
                                        "value": "[parameters('timeGrain')]"
                                    },
                                    "amount": {
                                        "value": "[parameters('amount')]"
                                    },
                                    "firstThreshold": {
                                        "value": "[parameters('firstThreshold')]"
                                    },
                                    "secondThreshold": {
                                        "value": "[parameters('secondThreshold')]"
                                    },
                                    "contactEmails": {
                                        "value": "[parameters('contactEmails')]"
                                    },
                                    "contactRoles": {
                                        "value": "[parameters('contactRoles')]"
                                    }
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "budgetName": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "Name of the Budget. It should be unique within a resource group."
                                            }
                                        },
                                        "startDate": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "The start date must be first of the month in YYYY-MM-DD format. Future start date should not be more than three months. Past start date should be selected within the timegrain preiod."
                                            }
                                        },
                                        "endDate": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "The end date for the budget in YYYY-MM-DD format. If not provided, we default this to 10 years from the start date."
                                            }
                                        },
                                        "timeGrain": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
                                            }
                                        },
                                        "amount": {
                                            "type": "int",
                                            "metadata": {
                                                "description": "The total amount of cost or usage to track with the budget"
                                            }
                                        },
                                        "firstThreshold": {
                                            "type": "int",
                                            "metadata": {
                                                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
                                            }
                                        },
                                        "secondThreshold": {
                                            "type": "int",
                                            "metadata": {
                                                "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0.01 and 1000."
                                            }
                                        },
                                        "contactEmails": {
                                            "type": "array",
                                            "metadata": {
                                                "description": "The list of email addresses to send the budget notification to when the threshold is exceeded."
                                            }
                                        },
                                        "contactRoles": {
                                            "type": "array",
                                            "metadata": {
                                                "description": "The list of contact roles to send the budget notification to when the threshold is exceeded."
                                            }
                                        }
                                    },
                                    "resources": [
                                        {   "type": "Microsoft.Consumption/budgets",
                                            "apiVersion": "2021-10-01",
                                            "name": "[parameters('budgetName')]",
                                            "properties": {
                                                "timePeriod": {
                                                    "startDate": "[parameters('startDate')]",
                                                    "endDate": "[parameters('endDate')]"
                                                },
                                                "timeGrain": "[parameters('timeGrain')]",
                                                "amount": "[parameters('amount')]",
                                                "category": "Cost",
                                                "notifications": {
                                                    "NotificationForExceededBudget1": {
                                                    "enabled": true,
                                                    "operator": "GreaterThan",
                                                    "threshold": "[parameters('firstThreshold')]",
                                                    "contactEmails": "[parameters('contactEmails')]",
                                                    "contactRoles": "[parameters('contactRoles')]"
                                                    },
                                                    "NotificationForExceededBudget2": {
                                                    "enabled": true,
                                                    "operator": "GreaterThan",
                                                    "threshold": "[parameters('secondThreshold')]",
                                                    "contactEmails": "[parameters('contactEmails')]",
                                                    "contactRoles": "[parameters('contactRoles')]",
                                                    "thresholdType": "Forecasted"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {   "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2020-10-01",
                            "name": "Create-NetworkRG",
                            "subscriptionId": "[parameters('subscriptionId')]",
                            "location": "[deployment().location]",
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                        {   "type": "Microsoft.Resources/resourceGroups",
                                            "apiVersion": "2018-05-01",
                                            "location": "[deployment().location]",
                                            "name": "rg-network",
                                            "properties": {}
                                        }
                                    ]
                                }
                            }
                        },
                        {   "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2020-10-01",
                            "name": "Create-VmRG",
                            "subscriptionId": "[parameters('subscriptionId')]",
                            "location": "[deployment().location]",
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                        {   "type": "Microsoft.Resources/resourceGroups",
                                            "apiVersion": "2018-05-01",
                                            "location": "[deployment().location]",
                                            "name": "rg-virtualmachines",
                                            "properties": {}
                                        }
                                    ]
                                }
                            }
                        },
                        {   "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2020-10-01",
                            "name": "Create-Network",
                            "subscriptionId": "[parameters('subscriptionId')]",
                            "resourceGroup": "[parameters('defaultNetworkRG')]",
                            "dependsOn": [
                                "Create-NetworkRG"
                            ],
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                    "location": {
                                        "value": "[deployment().location]"
                                    },
                                    "subscriptionName": {
                                        "value": "[parameters('subscriptionName')]"
                                    },
                                    "defaultNsgName": {
                                        "value": "[parameters('defaultNsgName')]"
                                    },
                                    "defaultVnetName": {
                                        "value": "[parameters('defaultVnetName')]"
                                    },
                                    "defaultSubnetName": {
                                        "value": "[parameters('defaultSubnetName')]"
                                    },
                                    "defaultRoutingTableName": {
                                        "value": "[parameters('defaultRoutingTableName')]"
                                    },
                                    "addressSpaceVnet": {
                                        "value": "[parameters('addressSpaceVnet')]"
                                    },
                                    "addressSpaceSubnet": {
                                        "value": "[parameters('addressSpaceSubnet')]"
                                    },
                                    "nextHopIpAddress": {
                                        "value": "[parameters('nextHopIpAddress')]"
                                    },
                                    "CreateHubPeering": {
                                        "value": "[parameters('CreateHubPeering')]"
                                    }
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "location": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "The lcoation for the resource"
                                            }
                                        },
                                        "subscriptionName": {
                                            "type": "string"
                                        },
                                        "defaultNsgName": {
                                            "type": "string",
                                            "metadata": {
                                                "displayName": "Change, if required the name of the default Network Security Group (NSG)"
                                            }
                                        },
                                        "defaultVnetName": {
                                            "type": "string",
                                            "metadata": {
                                                "displayName": "Change, if required the name of the default Virtual Network"
                                            }
                                        },
                                        "defaultSubnetName": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "Change, if required the name of the default Subnet Name"
                                            }
                                        },
                                        "defaultRoutingTableName": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "Change, if required the name of the default Routing Table Name"
                                            }
                                        },
                                        "addressSpaceVnet": {
                                            "type": "string"
                                        },
                                        "addressSpaceSubnet": {
                                            "type": "string"
                                        },
                                        "nextHopIpAddress": {
                                            "type": "string"
                                        },
                                        "CreateHubPeering": {
                                            "type": "string"
                                        }
                                    },
                                    "variables": {
                                    },
                                    "resources": [
                                            {   "type": "Microsoft.Network/networkSecurityGroups",
                                                "apiVersion": "2021-02-01",
                                                "name": "[parameters('defaultNsgName')]",
                                                "location": "[parameters('location')]",
                                                "properties": {
                                                "securityRules": [
                                                    {
                                                    "name": "default-allow-3389",
                                                    "properties": {
                                                        "priority": 1000,
                                                        "access": "Allow",
                                                        "direction": "Inbound",
                                                        "destinationPortRange": "3389",
                                                        "protocol": "Tcp",
                                                        "sourcePortRange": "*",
                                                        "sourceAddressPrefix": "*",
                                                        "destinationAddressPrefix": "*"
                                                    }
                                                    }
                                                ]
                                                }
                                            },
                                            {   "type": "Microsoft.Network/virtualNetworks",
                                                "apiVersion": "2022-05-01",
                                                "name": "[parameters('defaultVnetName')]",
                                                "location": "[parameters('location')]",
                                                "properties": {
                                                "addressSpace": {
                                                    "addressPrefixes": [
                                                        "[parameters('addressSpaceVnet')]"
                                                    ]
                                                },
                                                "dhcpOptions": {
                                                    "dnsServers": [
                                                    "172.25.4.79",
                                                    "172.25.8.79",
                                                    "10.200.85.122"
                                                    ]
                                                },
                                                "subnets": [
                                                    {
                                                    "name": "[parameters('defaultSubnetName')]",
                                                    "properties": {
                                                        "addressPrefix": "[parameters('addressSpaceSubnet')]",
                                                        "networkSecurityGroup": {
                                                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNsgName'))]"
                                                        },
                                                        "routeTable": {
                                                            "id": "[resourceId('Microsoft.Network/routeTables', parameters('defaultRoutingTableName'))]"
                                                        }
                                                    }
                                                    }
                                                ]
                                                },
                                                "dependsOn": [
                                                    "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNsgName'))]",
                                                    "[resourceId('Microsoft.Network/routeTables', parameters('defaultRoutingTableName'))]"
                                                ]
                                            },
                                            {   "type": "Microsoft.Network/routeTables",
                                                "apiVersion": "2022-05-01",
                                                "name": "[parameters('defaultRoutingTableName')]",
                                                "location": "[parameters('location')]",
                                                "properties": {
                                                    "disableBgpRoutePropagation": false,
                                                    "routes": [
                                                        {
                                                            "type": "Microsoft.Network/routeTables/routes",
                                                            "name": "default",
                                                            "properties": {
                                                                "addressPrefix": "0.0.0.0/0",
                                                                "nextHopIpAddress": "[parameters('nextHopIpAddress')]",
                                                                "nextHopType": "VirtualAppliance"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {   "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                                "condition": "[equals(parameters('CreateHubPeering'), 'Yes')]",
                                                "apiVersion": "2020-05-01",
                                                "name": "[concat(parameters('defaultVnetName'), '/', format('peer-vnet-hub-2-{0}', parameters('subscriptionName')))]",
                                                "dependsOn": [
                                                    "[parameters('defaultVnetName')]"
                                                ],
                                                "properties": {
                                                    "remoteVirtualNetwork": {
                                                        "id": "/subscriptions/82070651-ed70-4d25-a739-11eb43c460b8/resourceGroups/rg-hub/providers/Microsoft.Network/virtualNetworks/vnet-hub"
                                                    },
                                                    "allowVirtualNetworkAccess": true,
                                                    "allowForwardedTraffic": true,
                                                    "allowGatewayTransit": true,
                                                    "useRemoteGateways": true
                                                }
                                            }
                                    ]
                                }
                            }
                        },
                        {   "type": "Microsoft.Resources/deployments",
                            "condition": "[equals(parameters('CreateHubPeering'), 'Yes')]",
                            "apiVersion": "2020-10-01",
                            "name": "Create-HubPeering",
                            "subscriptionId": "82070651-ed70-4d25-a739-11eb43c460b8",
                            "resourceGroup": "rg-hub",
                            "dependsOn": [
                                "Create-Network"
                            ],
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                    "subscriptionId": {
                                        "value": "[parameters('subscriptionId')]"
                                    },
                                    "subscriptionName": {
                                        "value": "[parameters('subscriptionName')]"
                                    },
                                    "defaultVnetName": {
                                        "value": "[parameters('defaultVnetName')]"
                                    }
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "subscriptionId": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "Set the Subscription ID"
                                            }
                                        },
                                        "subscriptionName": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "Set the Subscription Name"
                                            }
                                        },
                                        "defaultVnetName": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "Set the remote VNet name"
                                            }
                                        }
                                    },
                                    "variables": {
                                    },
                                    "resources": [
                                        {   "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                            "apiVersion": "2021-02-01",
                                            "name": "[format('peer-vnet-hub-2-{0}', parameters('subscriptionName'))]",
                                            "properties": {
                                                "allowVirtualNetworkAccess": true,
                                                "allowForwardedTraffic": true,
                                                "allowGatewayTransit": true,
                                                "useRemoteGateways": false,
                                                "remoteVirtualNetwork": {
                                                    "id": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/', parameters('defaultVnetName'))]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {   "type": "Microsoft.Resources/deployments",
                            "condition": "[equals(parameters('CreateVM'), 'Yes')]",
                            "apiVersion": "2020-10-01",
                            "name": "[format('Create-{0}', parameters('vmName'))]",
                            "subscriptionId": "[parameters('subscriptionId')]",
                            "resourceGroup": "rg-virtualmachines",
                            "dependsOn": [
                                "Create-VmRG", "Create-Network"
                            ],
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                    "location": {
                                        "value": "[deployment().location]"
                                    },
                                    "vmSize": {
                                        "value": "[parameters('vmSize')]"
                                    },
                                    "windowsOSVersion": {
                                        "value": "[parameters('windowsOSVersion')]"
                                    },
                                    "defaultNetworkRG": {
                                        "value": "[parameters('defaultNetworkRG')]"
                                    },
                                    "defaultVnetName": {
                                        "value": "[parameters('defaultVnetName')]"
                                    },
                                    "defaultSubnetName": {
                                        "value": "[parameters('defaultSubnetName')]"
                                    },
                                    "vmName": {
                                        "value": "[parameters('vmName')]"
                                    },
                                    "CreateHubPeering": {
                                        "value": "[parameters('CreateHubPeering')]"
                                    },
                                    "domainToJoin": {
                                        "value": "[parameters('domainToJoin')]"
                                    },
                                    "NetBIOSdomainToJoin": {
                                        "value": "[parameters('NetBIOSdomainToJoin')]"
                                    },
                                    "domainUsername": {
                                        "value": "[parameters('domainUsername')]"
                                    },
                                    "domainPassword": {
                                        "value": "[parameters('domainPassword')]"
                                    },
                                    "ouPath": {
                                        "value": "[parameters('ouPath')]"
                                    },
                                    "domainJoinOptions": {
                                        "value": "[parameters('domainJoinOptions')]"
                                    },
                                    "adminUsername": {
                                        "value": "[parameters('adminUsername')]"
                                    },
                                    "adminPassword": {
                                        "value": "[parameters('adminPassword')]"
                                    },
                                    "storageAccountName": {
                                        "value": "[parameters('storageAccountName')]"
                                    }
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "location": {
                                            "type": "string",
                                            "metadata": {
                                                "description": "The lcoation for the resource"
                                            }
                                        },
                                        "vmSize": {
                                            "type": "string",
                                            "defaultValue": "Standard_B2s",
                                            "metadata": {
                                                "description": "Size of VM"
                                            },
                                            "allowedValues": [
                                                "Standard_B2s",
                                                "Standard_B2ms",
                                                "Standard_B4ms"
                                            ]
                                        },
                                        "windowsOSVersion": {
                                            "type": "string",
                                            "defaultValue": "2019-Datacenter",
                                            "allowedValues": [
                                                "2012-R2-Datacenter",
                                                "2016-Datacenter",
                                                "2019-Datacenter",
                                                "2022-Datacenter"
                                            ],
                                            "metadata": {
                                                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2012-R2-Datacenter, 2016-Datacenter, 2019-Datacenter, 2022-Datacenter."
                                            }
                                        },
                                        "defaultNetworkRG": {
                                            "type": "string",
                                            "defaultValue": "rg-network",
                                            "metadata": {
                                                "description": "Change, if required the name of the default Network Resource Group"
                                            }
                                        },
                                        "defaultVnetName": {
                                            "type": "string",
                                            "defaultValue": "[concat('vnet-',parameters('subscriptionName'))]",
                                            "metadata": {
                                                "description": "Change, if required the name of the default Vnet Name"
                                            }
                                        },
                                        "defaultSubnetName": {
                                            "type": "string",
                                            "defaultValue": "[concat('subnet-',parameters('subscriptionName'))]",
                                            "metadata": {
                                                "description": "Change, if required the name of the default Subnet Name"
                                            }
                                        },
                                        "CreateHubPeering": {
                                            "type": "string",
                                            "defaultValue": "No",
                                            "metadata": {
                                                "description": "Existing Hub Peering would be required to be able to Join Vm to on-prem AD"
                                            }
                                        },
                                        "vmName": {
                                            "type": "string",
                                            "defaultValue": "vm-test-01-d",
                                            "maxLength": 15,
                                            "minLength": 1,
                                            "metadata": {
                                                "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
                                            }
                                        },
                                        "domainToJoin": {
                                            "type": "string",
                                            "defaultValue": "",
                                            "metadata": {
                                                "description": "The FQDN of the AD domain"
                                            }
                                        },
                                        "NetBIOSdomainToJoin": {
                                            "type": "string",
                                            "defaultValue": "",
                                            "metadata": {
                                                "description": "The NetBIOS Name of the AD domain"
                                            }
                                        },
                                        "domainUsername": {
                                            "type": "string",
                                            "defaultValue": "",
                                            "metadata": {
                                                "description": "Username with domain-join privileges"
                                            }
                                        },
                                        "domainPassword": {
                                            "type": "secureString",
                                            "metadata": {
                                                "description": "Password of the account with domain-join privileges"
                                            }
                                        },
                                        "ouPath": {
                                            "type": "string",
                                            "defaultValue": "",
                                            "metadata": {
                                                "description": "Organizational Unit path in which the object will be created."
                                            }
                                        },
                                        "domainJoinOptions": {
                                            "type": "int",
                                            "defaultValue": 3,
                                            "metadata": {
                                                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
                                            }
                                        },
                                        "adminUsername": {
                                            "type": "string",
                                            "defaultValue": "localAdmin",
                                            "metadata": {
                                                "description": "The name of the local administrator of the new VM."
                                            }
                                        },
                                        "adminPassword": {
                                            "type": "secureString",
                                            "metadata": {
                                                "description": "The password for the local administrator account of the new VM."
                                            }
                                        },
                                        "storageAccountName": {
                                            "type": "string",
                                            "defaultValue": "",
                                            "metadata": {
                                                "description": "The name of the storage account."
                                            }
                                        }
                                    },
                                    "variables": {
                                        "imagePublisher": "MicrosoftWindowsServer",
                                        "imageOffer": "WindowsServer",
                                        "windowsOSVersion": "2019-Datacenter",
                                        "nicName": "[format('{0}-nic', parameters('vmName'))]"
                                    },
                                    "resources": [
                                        {   "type": "Microsoft.Storage/storageAccounts",
                                            "apiVersion": "2021-04-01",
                                            "name": "[parameters('storageAccountName')]",
                                            "location": "[parameters('location')]",
                                            "kind": "StorageV2",
                                            "sku": {
                                                "name": "Standard_LRS"
                                            }
                                        },
                                        {   "type": "Microsoft.Network/networkInterfaces",
                                            "apiVersion": "2021-02-01",
                                            "name": "[variables('nicName')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                "ipConfigurations": [
                                                {
                                                    "name": "ipconfig1",
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "id": "[resourceId(parameters('defaultNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets', parameters('defaultVnetName'), parameters('defaultSubnetName'))]"
                                                        }
                                                    }
                                                }
                                                ]
                                            }
                                        },
                                        {   "type": "Microsoft.Compute/virtualMachines",
                                            "apiVersion": "2021-03-01",
                                            "name": "[parameters('vmName')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                "hardwareProfile": {
                                                    "vmSize": "[parameters('vmSize')]"
                                                },
                                                "osProfile": {
                                                    "computerName": "[parameters('vmName')]",
                                                    "adminUsername": "[parameters('adminUsername')]",
                                                    "adminPassword": "[parameters('adminPassword')]"
                                                },
                                                "storageProfile": {
                                                    "imageReference": {
                                                        "publisher": "[variables('imagePublisher')]",
                                                        "offer": "[variables('imageOffer')]",
                                                        "sku": "[parameters('windowsOSVersion')]",
                                                        "version": "latest"
                                                    },
                                                    "osDisk": {
                                                        "name": "[format('{0}-OsDisk', parameters('vmName'))]",
                                                        "caching": "ReadWrite",
                                                        "createOption": "FromImage"
                                                    },
                                                    "dataDisks": [
                                                        {
                                                        "name": "[format('{0}-DataDisk', parameters('vmName'))]",
                                                        "caching": "None",
                                                        "createOption": "Empty",
                                                        "diskSizeGB": 1024,
                                                        "lun": 0
                                                        }
                                                    ]
                                                },
                                                "networkProfile": {
                                                    "networkInterfaces": [
                                                        {
                                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                                                        }
                                                    ]
                                                },
                                                "diagnosticsProfile": {
                                                "bootDiagnostics": {
                                                    "enabled": true,
                                                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.blob]"
                                                }
                                                }
                                            },
                                            "dependsOn": [
                                                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                                            ]
                                        },
                                        {   "type": "Microsoft.Compute/virtualMachines/extensions",
                                            "condition": "[equals(parameters('CreateHubPeering'), 'Yes')]",
                                            "apiVersion": "2021-03-01",
                                            "name": "[format('{0}/{1}', parameters('vmName'), 'joindomain')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                    "publisher": "Microsoft.Compute",
                                                    "type": "JsonADDomainExtension",
                                                    "typeHandlerVersion": "1.3",
                                                    "autoUpgradeMinorVersion": true,
                                                    "settings": {
                                                    "name": "[parameters('domainToJoin')]",
                                                    "ouPath": "[parameters('ouPath')]",
                                                    "user": "[format('{0}\\{1}', parameters('NetBIOSdomainToJoin'), parameters('domainUsername'))]",
                                                    "restart": true,
                                                    "options": "[parameters('domainJoinOptions')]"
                                                },
                                                "protectedSettings": {
                                                    "Password": "[parameters('domainPassword')]"
                                                }
                                            },
                                            "dependsOn": [
                                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                                            ]
                                        },
                                        {   "type": "Microsoft.Compute/virtualMachines/extensions",
                                            "apiVersion": "2021-04-01",
                                            "name": "[concat(parameters('vmName'),'/', 'PostCommands')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[resourceId('Microsoft.Compute/virtualMachines/extensions',parameters('vmName'),'joindomain')]"
                                            ],
                                            "properties": {
                                                "publisher": "Microsoft.Compute",
                                                "type": "CustomScriptExtension",
                                                "typeHandlerVersion": "1.7",
                                                "autoUpgradeMinorVersion": true,
                                                "settings": {
                                                    "commandToExecute": "powershell.exe Install-WindowsFeature RSAT-AD-Tools -IncludeAllSubFeature && powershell.exe Add-LocalGroupMember -Group 'Administrators' -Member 'adm.tobias.redelberger@spiegel.de' && powershell.exe Add-LocalGroupMember -Group 'Remote Desktop Users' -Member 'Spiegel\\redelbergert'"
                                                },
                                                "protectedSettings": {
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "outputs": {
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
